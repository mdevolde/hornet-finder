# nginx configuration for Hornet Finder Keycloak
# the proxy redirects to vite dev server and Django API

server {
    listen 80;
    server_name velutina.ovh;
    
    # Permanent redirection to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name velutina.ovh;

    ssl_certificate /etc/letsencrypt/live/velutina.ovh/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/velutina.ovh/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-CCM8:ECDHE-ECDSA-AES256-CCM:ECDHE-ECDSA-ARIA256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-CCM8:ECDHE-ECDSA-AES128-CCM;
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve prime256v1:X25519:secp384r1;

    location = /robots.txt {
        proxy_pass http://hornet-finder-api:8000/robots.txt;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header  X-Frame-Options;
        proxy_hide_header  X-Content-Type-Options;
        proxy_hide_header  Referrer-Policy;
        include /etc/nginx/conf.d/security-headers.conf; # Security headers are not needed here as Django handles them
    }

    # in production, the project is built and static, and built files are served directly
    # these are mounted in a volume
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        include /etc/nginx/conf.d/security-headers.conf;

        # Cache static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            include /etc/nginx/conf.d/security-headers.conf;
            access_log off;
        }
        
        # Special handling for index.html
        location = /index.html {
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            include /etc/nginx/conf.d/security-headers.conf;
        }
    }

    # Proxy for Django backend
    location /api/ {
        proxy_pass http://hornet-finder-api:8000/api/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_hide_header  X-Frame-Options;
        proxy_hide_header  X-Content-Type-Options;
        proxy_hide_header  Referrer-Policy;
        include /etc/nginx/conf.d/security-headers.conf; # Security headers are not needed here as Django handles them
    }
}
