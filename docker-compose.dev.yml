name: hornet-finder-dev

services:
  # Service pour générer les certificats SSL DEV
  certbot-dev:
    image: certbot/certbot
    volumes:
      - ./certbot-dev/conf:/etc/letsencrypt
      - ./certbot-dev/www:/var/www/certbot
    entrypoint:
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot --email vlb79rzxd@relay.firefox.com --agree-tos --no-eff-email --non-interactive -d dev.velutina.ovh -d auth.dev.velutina.ovh"
    depends_on:
      - nginx-certbot-dev
    profiles:
      - gencert

  nginx-certbot-dev:
    image: nginx:latest
    container_name: hornet-finder-dev-nginx-certbot
    ports:
      - "${DEV_IP:-37.187.220.209}:80:80"  # Port 80 requis pour les challenges ACME sur IP DEV spécifique
    volumes:
      - ./nginx/conf.d/certbot-dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot-dev/conf:/etc/letsencrypt:ro
      - ./certbot-dev/www:/var/www/certbot
    profiles:
      - gencert

  # Base de données PostGIS pour DEV
  hornet-finder-dev-api-db:
    build: ./postgis
    container_name: hornet-finder-dev-api-db
    environment:
      - POSTGRES_DB=hornet_finder_dev
      - POSTGRES_USER=hornet_finder_dev
      - POSTGRES_PASSWORD=${DEV_DB_PASSWORD}
    volumes:
      - api-db:/var/lib/postgresql/data

  # API Django pour DEV
  hornet-finder-dev-api:
    build: ./backend
    container_name: hornet-finder-dev-api
    image: hornet-finder-dev-api
    environment:
      - DEBUG=True
      - DJANGO_SECRET_KEY=${DEV_DJANGO_SECRET_KEY}
      - HOST=dev.velutina.ovh
      - DEV_HOST=dev.velutina.ovh
      - DB_HOST=hornet-finder-dev-api-db
      - DB_NAME=hornet_finder_dev
      - DB_USER=hornet_finder_dev
      - DB_PASSWORD=${DEV_DB_PASSWORD}
      - KC_CLIENT_ID=${DEV_KC_CLIENT_ID}
      - KC_CLIENT_SECRET=${DEV_KC_CLIENT_SECRET}
      - KC_INTERNAL_URL=http://hornet-finder-dev-keycloak:8080/
      - KC_REALM=hornet-finder-dev
    depends_on:
      - hornet-finder-dev-api-db
      - hornet-finder-dev-keycloak

  # Database Keycloak pour DEV
  hornet-finder-dev-keycloak-db:
    image: postgres:latest
    container_name: hornet-finder-dev-keycloak-db
    environment:
      - POSTGRES_DB=keycloak_dev
      - POSTGRES_USER=keycloak_dev
      - POSTGRES_PASSWORD=${DEV_KEYCLOAK_DB_PASSWORD}
    volumes:
      - keycloak-db:/var/lib/postgresql/data

  # Keycloak pour DEV
  hornet-finder-dev-keycloak:
    build: ./auth
    container_name: hornet-finder-dev-keycloak
    image: hornet-finder-dev-keycloak
    environment:
      - KC_DB_URL=jdbc:postgresql://hornet-finder-dev-keycloak-db/keycloak_dev
      - KC_DB_USERNAME=keycloak_dev
      - KC_DB_PASSWORD=${DEV_KEYCLOAK_DB_PASSWORD}
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${DEV_KC_BOOTSTRAP_ADMIN_PASSWORD}
      - DEV_KEYCLOAK_DB_PASSWORD=${DEV_KEYCLOAK_DB_PASSWORD}
    volumes:
      - ./auth/realm-export-dev.json:/opt/keycloak/data/import/realm-export.json
      - ./auth/docker-entrypoint-dev.sh:/opt/keycloak/docker-entrypoint.sh
    depends_on:
      - hornet-finder-dev-keycloak-db

  # Nginx pour DEV
  nginx:
    image: nginx:latest
    container_name: hornet-finder-dev-nginx
    ports:
      - "${DEV_IP:-0.0.0.0}:${DEV_PROXY_PORT:-80}:80"
      - "${DEV_IP:-0.0.0.0}:${DEV_PROXY_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/conf.d/auth-dev.conf:/etc/nginx/conf.d/auth-dev.conf:ro
      - ./nginx/conf.d/app-dev.conf:/etc/nginx/conf.d/app-dev.conf:ro
      - ./nginx/include/security-headers.conf:/etc/nginx/include/security-headers.conf:ro
      - ./nginx/include/security-headers-dev.conf:/etc/nginx/include/security-headers-dev.conf:ro
      - ./certbot-dev/conf:/etc/letsencrypt:ro
      - ./certbot-dev/www:/var/www/certbot
    depends_on:
      - hornet-finder-dev-api
      - hornet-finder-dev-keycloak
      - hornet-finder-dev-vite

  # Serveur Vite pour DEV
  hornet-finder-dev-vite:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hornet-finder-dev-vite
    environment:
      # URLs pour le développement - utiliser les vrais services
      - VITE_API_URL=https://dev.velutina.ovh/api/
      - VITE_KEYCLOAK_URL=https://auth.dev.velutina.ovh/
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - hornet-finder-dev-api
      - hornet-finder-dev-keycloak
    command: npm run dev -- --host 0.0.0.0 --port 5173

volumes:
  api-db:
  keycloak-db:

networks:
  default:
    name: hornet-finder-dev-network
    driver: bridge
