name: hornet-finder-prod

services:
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint:
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot --email vlb79rzxd@relay.firefox.com --agree-tos --no-eff-email --non-interactive -d velutina.ovh -d auth.velutina.ovh -d www.velutina.ovh -d dev.velutina.ovh -d prod.velutina.ovh"

    depends_on:
      - nginx-certbot

    profiles:
      - gencert

  nginx-certbot:
    image: nginx:latest
    container_name: hornet-finder-nginx-certbot
    ports:
      - "${PROXY_PORT:-80}:80"
    volumes:
      - ./nginx/conf.d/certbot.conf:/etc/nginx/conf.d/certbot.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot

    profiles:
      - gencert

  hornet-finder-api-db:
    build: ./postgis
    container_name: hornet-finder-api-db
    environment:
      - POSTGRES_DB=hornet_finder
      - POSTGRES_USER=hornet_finder
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - api-db:/var/lib/postgresql/data

  hornet-finder-api:
    build: ./backend
    container_name: hornet-finder-api
    image: hornet-finder-api
    environment:
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - HOST=${HOST}
      - DB_HOST=hornet-finder-api-db
      - DB_NAME=hornet_finder
      - DB_USER=hornet_finder
      - DB_PASSWORD=${DB_PASSWORD}
      - KC_CLIENT_ID=${KC_CLIENT_ID}
      - KC_CLIENT_SECRET=${KC_CLIENT_SECRET}
      - KC_INTERNAL_URL=http://hornet-finder-keycloak:8080/
      - KC_REALM=hornet-finder

    depends_on:
      - hornet-finder-api-db
      - hornet-finder-keycloak

  hornet-finder-keycloak-db:
    image: postgres:latest
    container_name: hornet-finder-keycloak-db
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
    volumes:
      - keycloak-db:/var/lib/postgresql/data

  hornet-finder-keycloak:
    build: ./auth
    container_name: hornet-finder-keycloak
    image: hornet-finder-keycloak
    environment:
      - KC_DB_URL=jdbc:postgresql://hornet-finder-keycloak-db/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KC_HOSTNAME=${KC_HOSTNAME}
    volumes:
      - ./auth/realm-export.json:/opt/keycloak/data/import/realm-export.json
    depends_on:
      - hornet-finder-keycloak-db

  nginx:
    image: nginx:latest
    container_name: hornet-finder-nginx-prod
    ports:
      - "${PROD_IP:-0.0.0.0}:${PROXY_PORT:-80}:80"
      - "${PROD_IP:-0.0.0.0}:443:443"
    volumes:
      - ./nginx/conf.d/auth.conf:/etc/nginx/conf.d/auth.conf:ro
      - ./nginx/conf.d/prod.conf:/etc/nginx/conf.d/prod.conf:ro
      - ./nginx/include/security-headers.conf:/etc/nginx/include/security-headers.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
      - frontend-dist:/usr/share/nginx/html:ro
    depends_on:
      - hornet-finder-api
      - hornet-finder-keycloak

  hornet-finder-frontend-build:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: hornet-finder-frontend-build
    environment:
      - VITE_API_URL=https://velutina.ovh/api/
      - VITE_KEYCLOAK_URL=https://auth.velutina.ovh/
    volumes:
      - frontend-dist:/output
    command: sh -c "cp -r dist/* /output/"
    profiles:
      - build-frontend

volumes:
  api-db:
  keycloak-db:  
  frontend-dist:

networks:
  hornet-finder-prod-network:
    name: hornet-finder-prod-network
    driver: bridge
