name: hornet-finder

services:
  hornet-finder-api-db:
    image: postgres:latest
    container_name: hornet-finder-api-db
    environment:
      - POSTGRES_DB=hornet_finder
      - POSTGRES_USER=hornet_finder
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - api-db:/var/lib/postgresql/data
  hornet-finder-api:
    build: ./backend
    container_name: hornet-finder-api
    image: hornet-finder-api
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - HOST=${HOST}
      - DB_HOST=hornet-finder-api-db
      - DB_NAME=hornet_finder
      - DB_USER=hornet_finder
      - DB_PASSWORD=${DB_PASSWORD}
      - KEYCLOAK_PUBLIC_KEY=${KEYCLOAK_PUBLIC_KEY}
    depends_on:
      - hornet-finder-api-db

  hornet-finder-keycloak-db:
    image: postgres:latest
    container_name: hornet-finder-keycloak-db
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
    volumes:
      - keycloak-db:/var/lib/postgresql/data
  hornet-finder-keycloak:
    build: ./auth
    container_name: hornet-finder-keycloak
    image: hornet-finder-keycloak
    environment:
      - KC_DB_URL=jdbc:postgresql://hornet-finder-keycloak-db/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KC_HOSTNAME=${KC_HOSTNAME}
    depends_on:
      - hornet-finder-keycloak-db
  
  nginx:
    image: nginx:latest
    container_name: hornet-finder-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - hornet-finder-api
      - hornet-finder-keycloak
  
volumes:
  api-db:
  keycloak-db:
